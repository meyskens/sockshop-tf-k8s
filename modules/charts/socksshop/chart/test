---
# Source: helm-chart/templates/cart-db-pvc.yaml

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: carts-db
  labels:
    name: carts-db
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gb"
---
# Source: helm-chart/templates/catalogue-db-pvc.yaml

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gb"
---
# Source: helm-chart/templates/orders-db-pvc.yaml

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: orders-db
  labels:
    name: orders-db
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gb"
---
# Source: helm-chart/templates/user-db-pvc.yaml

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: user-db
  labels:
    name: user-db
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gb"
---
# Source: helm-chart/templates/cart-db-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: carts-db
  labels:
    name: carts-db
spec:
  ports:
    # the port that this service should serve on
  - port: 27017
    targetPort: 27017
  selector:
    name: carts-db

---
# Source: helm-chart/templates/carts-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: carts
  labels:
    name: carts
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: carts

---
# Source: helm-chart/templates/catalogue-db-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
spec:
  ports:
    # the port that this service should serve on
  - port: 3306
    targetPort: 3306
  selector:
    name: catalogue-db

---
# Source: helm-chart/templates/catalogue-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
  labels:
    name: catalogue
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: catalogue

---
# Source: helm-chart/templates/front-end-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: front-end
  labels:
    name: front-end
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8079
    nodePort: 30001
  selector:
    name: front-end

---
# Source: helm-chart/templates/orders-db-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: orders-db
  labels:
    name: orders-db
spec:
  ports:
    # the port that this service should serve on
  - port: 27017
    targetPort: 27017
  selector:
    name: orders-db

---
# Source: helm-chart/templates/orders-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: orders
  labels:
    name: orders
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: orders

---
# Source: helm-chart/templates/payment-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: payment
  labels:
    name: payment
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: payment

---
# Source: helm-chart/templates/queue-master-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: queue-master
  labels:
    name: queue-master
  annotations:
    prometheus.io/path: "/prometheus"
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: queue-master

---
# Source: helm-chart/templates/rabbitmq-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    name: rabbitmq
spec:
  ports:
    # the port that this service should serve on
  - port: 5672
    targetPort: 5672
  selector:
    name: rabbitmq

---
# Source: helm-chart/templates/session-db-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: session-db
  labels:
    name: session-db
spec:
  ports:
    # the port that this service should serve on
  - port: 6379
    targetPort: 6379
  selector:
    name: session-db

---
# Source: helm-chart/templates/shipping-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: shipping
  labels:
    name: shipping
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: shipping


---
# Source: helm-chart/templates/user-db-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: user-db
  labels:
    name: user-db
spec:
  ports:
    # the port that this service should serve on
  - port: 27017
    targetPort: 27017
  selector:
    name: user-db


---
# Source: helm-chart/templates/user-svc.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: user
  labels:
    name: user
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: user


---
# Source: helm-chart/templates/cart-db-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: carts-db
  labels:
    name: carts-db
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: carts-db
    spec:
      containers:
      - name: carts-db
        image: mongo
        ports:
        - name: mongo
          containerPort: 27017
        securityContext:
          capabilities:
            drop:
              - all
            add:
              - CHOWN
              - SETGID
              - SETUID
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
          - mountPath: /data/db
            name: db-volume

      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
        - name: db-volume
          persistentVolumeClaim:
            claimName: carts-db

---
# Source: helm-chart/templates/carts-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: carts
  labels:
    name: carts
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: carts
    spec:
      containers:
      - name: carts
        image: weaveworksdemos/carts:0.4.8
        env:
         - name: JAVA_OPTS
           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        resources:
          limits:
            cpu: 300m
            memory: 2000Mi
          requests:
            cpu: 300m
            memory: 2000Mi
        ports:
        - containerPort: 80
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 180
          periodSeconds: 3
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory

---
# Source: helm-chart/templates/catalogue-db-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: catalogue-db
    spec:
      containers:
      - name: catalogue-db
        image: weaveworksdemos/catalogue-db:0.3.0
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: fake_password
          - name: MYSQL_DATABASE
            value: socksdb
        ports:
        - name: mysql
          containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: db-volume
      volumes:
        - name: db-volume
          persistentVolumeClaim:
            claimName: catalogue-db

---
# Source: helm-chart/templates/catalogue-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: catalogue
  labels:
    name: catalogue
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: catalogue
    spec:
      containers:
      - name: catalogue
        image: weaveworksdemos/catalogue:0.3.5
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 180
          periodSeconds: 3

---
# Source: helm-chart/templates/front-end-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: front-end
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: front-end
    spec:
      containers:
      - name: front-end
        image: weaveworksdemos/front-end:0.3.12
        resources:
          limits:
            cpu: 300m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 300Mi
        ports:
        - containerPort: 8079
        env:
        - name: SESSION_REDIS
          value: "true"
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /
            port: 8079
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8079
          initialDelaySeconds: 30
          periodSeconds: 3

---
# Source: helm-chart/templates/orders-db-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: orders-db
  labels:
    name: orders-db
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: orders-db
    spec:
      containers:
      - name: orders-db
        image: mongo
        ports:
        - name: mongo
          containerPort: 27017
        securityContext:
          capabilities:
            drop:
              - all
            add:
              - CHOWN
              - SETGID
              - SETUID
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
          - mountPath: /data/db
            name: db-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
        - name: db-volume
          persistentVolumeClaim:
            claimName: carts-db

---
# Source: helm-chart/templates/orders-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: orders
  labels:
    name: orders
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: orders
    spec:
      containers:
      - name: orders
        image: weaveworksdemos/orders:0.4.7
        env:
         - name: JAVA_OPTS
           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        resources:
          limits:
            cpu: 500m
            memory: 2000Mi
          requests:
            cpu: 200m
            memory: 2000Mi
        ports:
        - containerPort: 80
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 180
          periodSeconds: 3
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory


---
# Source: helm-chart/templates/payment-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: payment
  labels:
    name: payment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: payment
    spec:
      containers:
      - name: payment
        image: weaveworksdemos/payment:0.4.3
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 180
          periodSeconds: 3

---
# Source: helm-chart/templates/queue-master-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: queue-master
  labels:
    name: queue-master
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: queue-master
    spec:
      containers:
      - name: queue-master
        image: weaveworksdemos/queue-master:0.3.1
        env:
         - name: JAVA_OPTS
           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        resources:
          limits:
            cpu: 300m
            memory: 1000Mi
          requests:
            cpu: 300m
            memory: 1000Mi
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 180
          periodSeconds: 3

---
# Source: helm-chart/templates/rabbitmq-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    name: rabbitmq
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.6.8
        ports:
        - containerPort: 5672
        securityContext:
          capabilities:
            drop:
              - all
            add:
              - CHOWN
              - SETGID
              - SETUID
              - DAC_OVERRIDE
          readOnlyRootFilesystem: true

---
# Source: helm-chart/templates/session-db-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: session-db
  labels:
    name: session-db
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: session-db
    spec:
      containers:
      - name: session-db
        image: redis:alpine
        ports:
        - name: redis
          containerPort: 6379
        securityContext:
          capabilities:
            drop:
              - all
            add:
              - CHOWN
              - SETGID
              - SETUID
          readOnlyRootFilesystem: true

---
# Source: helm-chart/templates/shipping-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: shipping
  labels:
    name: shipping
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: shipping
    spec:
      containers:
      - name: shipping
        image: weaveworksdemos/shipping:0.4.8
        env:
         - name: JAVA_OPTS
           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        resources:
          limits:
            cpu: 300m
            memory: 2000Mi
          requests:
            cpu: 300m
            memory: 2000Mi
        ports:
        - containerPort: 80
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 180
          periodSeconds: 3
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory


---
# Source: helm-chart/templates/user-db-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: user-db
  labels:
    name: user-db
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: user-db
    spec:
      containers:
      - name: user-db
        image: weaveworksdemos/user-db:0.3.0

        ports:
        - name: mongo
          containerPort: 27017
        securityContext:
          capabilities:
            drop:
              - all
            add:
              - CHOWN
              - SETGID
              - SETUID
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
          - mountPath: /data/db
            name: db-volume

      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
        - name: db-volume
          persistentVolumeClaim:
            claimName: user-db

---
# Source: helm-chart/templates/user-dep.yaml
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: user
  labels:
    name: user
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: user
    spec:
      containers:
      - name: user
        image: weaveworksdemos/user:0.4.4
        resources:
          limits:
            cpu: 300m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 400Mi
        ports:
        - containerPort: 80
        env:
        - name: MONGO_HOST
          value: user-db:27017
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 180
          periodSeconds: 3

---
# Source: helm-chart/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: socks-ingress
  annotations:

spec:
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: front-end
              servicePort: 80

---
# Source: helm-chart/templates/loadtest-dep.yaml

---
# Source: helm-chart/templates/zipkin-cron-dep.yaml

---
# Source: helm-chart/templates/zipkin-dep.yaml

---
# Source: helm-chart/templates/zipkin-mysql-dep.yaml

---
# Source: helm-chart/templates/zipkin-mysql-svc.yaml

---
# Source: helm-chart/templates/zipkin-svc.yaml

